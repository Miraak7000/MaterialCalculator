<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core.dll" #>
<#@ assembly name="System.Xml.dll" #>
<#@ assembly name="System.Xml.Linq.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Globalization" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Xml.Linq" #>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Globalization;
using System.Xml.Linq;
using System.IO;

<# var folder = @"C:\Users\Andreas\source\repos\MaterialCalculator\MaterialCalculator\Resources\Globalization"; #>
<# var xmlPath = Path.Combine(folder, "EN.xml"); #>
<# var xmlRoot = XDocument.Load(xmlPath).Root; #>
namespace MaterialCalculator.Resources {

  public static class Localization {

    #region Properties
<# foreach (var section in xmlRoot.Elements()) { #>
<# foreach (var item in section.Elements()) { #>
    public static String <#=section.Name#>_<#=item.Name#> {
      get { return Localization.Documents[CultureInfo.CurrentUICulture.TwoLetterISOLanguageName.ToUpper()].Element("<#=section.Name#>")?.Element("<#=item.Name#>")?.Value; }
    }
<# } #>
    //
<# } #>
    #endregion

    #region Fields
    private static readonly Dictionary<String, XElement> Documents = new Dictionary<String, XElement>();
    #endregion

    #region Constructor
    static Localization() {
      using (var stream = typeof(Localization).Assembly.GetManifestResourceStream("MaterialCalculator.Resources.Globalization.EN.xml")) {
        if (stream == null) return;
        using (var reader = new StreamReader(stream)) {
          var result = reader.ReadToEnd();
          Localization.Documents.Add("EN", XDocument.Parse(result).Root);
        }
      }
      using (var stream = typeof(Localization).Assembly.GetManifestResourceStream("MaterialCalculator.Resources.Globalization.DE.xml")) {
        if (stream == null) return;
        using (var reader = new StreamReader(stream)) {
          var result = reader.ReadToEnd();
          Localization.Documents.Add("DE", XDocument.Parse(result).Root);
        }
      }
    }
    #endregion

  }

}